<script src="http://maps.google.com/maps/api/js?key=AIzaSyAt916N2Qo6qPUuHBej-atmcrtIb4NTcGA" type="text/javascript">

</script>
<script src="http://code.jquery.com/jquery-3.3.1.js"
        integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60="
        crossorigin="anonymous"></script>

<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 100px;
        width: 200px;
        -webkit-user-select: none;
        background-color: white;
    }
    .left-box {
        float: left;
        width: 25%;
        height: 550px;        
        border: 1px solid #73AD21;
    }
    .right-box {
        float: right;
        width: 70%;
        height: 550px;
        border: 1px solid #73AD21;
    }
</style>
<br />
@model IEnumerable<HousingRecommendationSystem.Models.PropertyModel>
<div class="left-box">
    @{ 
        var DisplayList = (List<HousingRecommendationSystem.Models.PropertyModel>)ViewData["ListData"];
    }
    <table border="1">
        <tr>            
            <th>Property</th>
        </tr>
        @foreach (var c in DisplayList)
         {
            <tr>
                <td>@c.PropertyName</td>
            </tr>            
         }
    </table>
    
</div>
<div id="map_canvas" class="right-box"></div>
<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
    <section class="scripts">

        <script type="text/javascript">


    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
        var Tunisie = new google.maps.LatLng(1.2921816, 103.7766);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 11,
            center: Tunisie,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

            var data;
            $.ajax({
                url: '@Url.Action("GetData", "Maps")',
                data: { 'id': + @Html.Raw(Json.Encode(ViewData["IDFromClips"]))},
                type: "GET",
                async: false,
                success: function (result) {
                    data = result
                }
            });
            console.log(data)
        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
        $.each(eval(data.replace(/[\r\n]/,"")), function (i, item) {
            var marker = new google.maps.Marker({
                'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                'map': map,
                'draggable': true,
                'animation': google.maps.Animation.BOUNCE,
                'title': item.PlaceName
            });

            // Make the marker-pin blue!
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

            // put in some information about each json object - in this case, the opening hours.
            var infowindow = new google.maps.InfoWindow({
                content: "<div class='infoDiv'><h5>" + item.PlaceName + "</h5></div></div>"
            });

            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
            });

        })
    }


        </script>
    </section>
}

